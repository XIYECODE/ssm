<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lingnan.webshop.dao.UserMapper">
	
	<!-- ==============================SQL字段转Java属性=========================== -->
	
	<resultMap type="user" id="baseMap"><!-- resultMap的内容是上面的映射id -->
		<id column="user_id" property="id"/><!-- 这里可以统一用result 用id只是为了明了该字段是主键-->
		<result column="user_name" property="loginName"/>
		<result column="user_password" property="password"/>
		<result column="realname" property="name"/>
		<result column="user_sex" property="sex"/>
		<result column="user_tel" property="telephone"/>
		<result column="user_email" property="email"/>
		<result column="user_addr" property="address"/>
		<result column="user_delete" property="del_status"/>
	</resultMap>
	
	<!-- =================================select================================ -->
	<!-- 有待完善==查询过程应该去掉密码 -->
	<select id="find" resultMap="baseMap" parameterType="cn.lingnan.webshop.query.UserQuery">
		select user_id, user_name, realname, user_sex, user_tel, user_email, user_addr, user_delete from user
		<trim prefix="where" prefixOverrides="and | or">
			<if test="loginName != null">and user_name like CONCAT(CONCAT('%',#{loginName},'%'))</if>
			<if test="name != null">and realname like CONCAT(CONCAT('%',#{name},'%'))</if>
		</trim>
	</select>
	
	<!-- 登陆 -->
	<select id="login" resultMap="baseMap">
		select user_id, user_name, realname, user_sex, user_tel, user_email, user_addr, user_delete from user where user_name = #{loginName} and user_password = #{password}
	</select>
	<!-- 查找Id -->
	<select id="findById" resultMap="baseMap" parameterType="Integer">
		select user_id, user_name, realname, user_sex, user_tel, user_email, user_addr, user_delete from user where user_id = #{id}
	</select>
	
	<!-- 2019-06-18 -->
	<select id="checkPassword" resultType="Integer">
		select count(user_id) from user where user_id = #{id} and user_password = #{password}
	</select>
	<select id="checkUser" resultType="Integer">
		select count(user_id) from user
		<trim prefix="where" prefixOverrides="and | or">
			<if test="loginName != null">and user_name = #{loginName}</if>
			<if test="password != null">and user_password = #{password}</if>
			<if test="id != null">and user_id = #{id}</if>
		</trim>
	</select>
	
	<!-- =================================insert=============================== -->
	
	<!-- 新增客户 -->
	<insert id="add" parameterType="user">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			user_name,
			user_password,
			<if test="name != null">realname,</if>
			<if test="sex != null">user_sex,</if>
			<if test="telephone != null">user_tel,</if>
			<if test="email != null">user_email,</if>
			<if test="address != null">user_addr,</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			#{loginName},
			#{password},
			<if test="name != null">#{name},</if>
			<if test="sex != null">#{sex},</if>
			<if test="telephone != null">#{telephone},</if>
			<if test="email != null">#{email},</if>
			<if test="address != null">#{address},</if>
		</trim>
	</insert>
	
	
	<!-- ================================update============================== -->
	
	<update id="update" parameterType="user">
		update user
		<trim prefix="set" suffixOverrides=",">
			<if test="loginName != null">user_name = #{loginName},</if>
			<if test="name != null">realname = #{name},</if>
			<if test="telephone != null">user_tel = #{telephone},</if>
			<if test="email != null">user_email = #{email},</if>
			<if test="address != null">user_addr = #{address},</if>
			<if test="address != null">user_sex = #{sex},</if>
		</trim>
		where user_id = #{id}
	</update>
	
	<!-- 2019-06-18 -->
	<update id="updatePassword">
		update user set user_password = #{password} where user_id = #{id}
	</update>
	
	<!-- =================================delete============================= -->
	
	<delete id="deleteByIds">
		delete from user where user_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
 
</mapper>